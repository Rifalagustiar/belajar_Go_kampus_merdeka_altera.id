-- =======================Join, Union, Sub query, Function=============================
--
    -- 1. Gabungkan data transaksi dari user id 1 dan user id 2.
    SELECT * FROM transactions WHERE user_id IN (1, 2);
	
    -- 2. Tampilkan jumlah harga transaksi user id 1.
    SELECT SUM(total_price) FROM transactions WHERE user_id = 1;
	
    -- 3. Tampilkan total transaksi dengan product type 2.
    SELECT COUNT(*) FROM transactions t 
    JOIN transaction_details td 
    ON t.id = td.transaction_id 
    JOIN products p 
    ON td.product_id = p.id WHERE p.product_type_id = 2;
    
    -- 4. Tampilkan semua field table product dan field name table product type yang saling berhubungan
    SELECT products.*, product_types.name
	FROM products
	JOIN product_types
	ON products.product_type_id = product_types.id;
    
    -- 5. Tampilkan semua field table transaction, field name table product dan field name table user.
    SELECT transactions.*, products.name AS product_name, users.name AS user_name 
	FROM transactions 
	INNER JOIN products ON transactions.id = products.id 
	INNER JOIN users ON transactions.user_id = users.id;
	
    -- 6. Buat function setelah data transaksi dihapus maka transaction detail terhapus juga dengan transaction id yang dimaksud.
    DELIMITER $$
	CREATE FUNCTION delete_transaction_detail_by_transaction_id(p_transaction_id INT)
    RETURNS BOOLEAN
	BEGIN
    DELETE FROM transaction_details WHERE transaction_id = p_transaction_id;
    RETURN TRUE;
	END$$
	DELIMITER ;
    SELECT delete_transaction_detail_by_transaction_id(4);

	-- 7. Buat function setelah data transaksi detail dihapus maka data total_qty terupdate berdasarkan qty data transaction id yang dihapus.
	DROP FUNCTION IF EXISTS `update_total_qty_by_transaction_detail_id`;
	DELIMITER $$
	CREATE FUNCTION update_total_qty_by_transaction_detail_id(p_transaction_detail_id INT)
	RETURNS BOOLEAN
	BEGIN
    DECLARE transaction_id INT;
    DECLARE qty INT;
    SELECT transaction_id, qty INTO transaction_id, qty FROM transaction_details WHERE transaction_id = p_transaction_detail_id;
    UPDATE transactions SET total_qty = total_qty - qty WHERE id = transaction_id;
    RETURN TRUE;
	END$$
	DELIMITER ;
	SELECT update_total_qty_by_transaction_detail_id(10);

    
	-- 8. Tampilkan data products yang tidak pernah ada di tabel transaction_details dengan sub-query.
    SELECT * FROM products WHERE id NOT IN (SELECT DISTINCT product_id FROM transaction_details);